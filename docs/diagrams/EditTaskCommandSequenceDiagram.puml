@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":SocheduleParser" as SocheduleParser LOGIC_COLOR
participant ":EditTaskCommandParser" as EditTaskCommandParser LOGIC_COLOR
participant "e:EditTaskCommand" as EditTaskCommand LOGIC_COLOR
participant "ed:EditTaskDescriptor" as EditTaskDescriptor LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : parse("edit_task 1 n/t1")
activate LogicManager

LogicManager -> SocheduleParser : parseCommand("edit_task 1 n/t1")
activate SocheduleParser

SocheduleParser -> EditTaskCommandParser: parse("1 n/t1")
activate EditTaskCommandParser

create EditTaskDescriptor
EditTaskCommandParser -> EditTaskDescriptor
activate EditTaskDescriptor
EditTaskCommandParser <--EditTaskDescriptor : ed
deactivate EditTaskDescriptor

create EditTaskCommand
EditTaskCommandParser -> EditTaskCommand
activate EditTaskCommand
EditTaskCommandParser <--EditTaskCommand : e
deactivate EditTaskCommand

SocheduleParser <--EditTaskCommandParser : e
deactivate EditTaskCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
EditTaskCommandParser -[hidden]->[
destroy EditTaskCommandParser

LogicManager <-- SocheduleParser : e
deactivate SocheduleParser

LogicManager -> EditTaskCommand : execute()
activate EditTaskCommand
destroy EditTaskDescriptor

EditTaskCommand -> Model : setTask(taskToEdit, editedTask)
activate Model
EditTaskCommand <-- Model
deactivate Model

EditTaskCommand -> Model : updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS)
activate Model
EditTaskCommand <-- Model
deactivate Model

create CommandResult
EditTaskCommand -> CommandResult
activate CommandResult
EditTaskCommand <-- CommandResult
deactivate CommandResult

LogicManager <-- EditTaskCommand : result
deactivate EditTaskCommand

[<-- LogicManager :
@enduml
